import icaro.infraestructura.recursosOrganizacion.recursoTrazas.ItfUsoRecursoTrazas;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.imp.componentes.InfoTraza;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.*;
import icaro.infraestructura.patronAgenteCognitivo.procesadorObjetivos.gestorTareas.ItfGestorTareas;
import icaro.infraestructura.entidadesBasicas.PerformativaUsuario;
import icaro.infraestructura.entidadesBasicas.comunicacion.*
import icaro.aplicaciones.agentes.AgenteAplicacionGuia.objetivos.*;
import icaro.aplicaciones.informacion.gestionCitas.*;
import icaro.aplicaciones.agentes.AgenteAplicacionGuia.tareas.*;

global ItfGestorTareas gestorTareas;
global ItfUsoRecursoTrazas recursoTrazas;
global String agentId;

rule "Creacion de los objectivos iniciales"
  when 
  then 
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(InicializarInfoWorkMem.class);
    tarea.ejecutar();
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
end
// =======================================================================
//Reglas de focalizacion.
rule "Regla de focalizacion en objetivo ReconocerUsuario"
  when
    f:Focus(foco == null )
    obj:ObtenerInfoInterlocutor()
  then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    update(f);
end
//=======================================================================
//Reglas de Consecucion del Objetivo ObtenerInfoInterlocutor
rule "Inicio del proceso de consecucion del  objetivo ObtenerInfoInterlocutor"
  when
    obj:ObtenerInfoInterlocutor(state==Objetivo.PENDING)
    Focus(foco ==obj)
  then
    obj.setSolving();
    update(obj);
end
rule "Saludo Inicial y peticion de info"
  when
    obj:ObtenerInfoInterlocutor(state==Objetivo.SOLVING)
    Focus(foco == obj)
  then
    //recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Se ejecuta la tarea : SolicitarDatosAcceso",InfoTraza.NivelTraza.debug));
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(SolicitarInfoInicial.class);
    tarea.ejecutar(VocabularioGestionCitas.IdentRecursoComunicacionChat);
    
    obj.setSolved();
    update(obj);
    
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end



rule "Regla para focalizar el objetivo en reconocer usuario"
  when
    objAntiguo:ObtenerInfoInterlocutor(state==Objetivo.SOLVED)
    obj:ReconocerUsuario(state==Objetivo.PENDING)
    f:Focus(foco == objAntiguo)
  then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
    update(f);
end
rule "Inicio del proceso de consecucion del  objetivo ReconocerUsuario"
  when
    obj:ReconocerUsuario(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end
rule "Comprobar si existe el usuario"
  when
    obj:ReconocerUsuario(state==Objetivo.SOLVING)
    f:Focus(foco == obj)
  then
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Se ejecuta la tarea : comprobar usuario",InfoTraza.NivelTraza.debug));
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(BuscarUsuario.class);
    tarea.ejecutar();
    
    obj.setSolved();
    update(obj);
    
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end



rule "Hacer las preguntas iniciales al usuario"
  when
    obj:PreguntarDatosInicialesUsuario(state==Objetivo.PENDING)
    f:Focus()
  then
    obj.setSolving();
    update(obj);
    f.setFoco(obj);
    update(f);
    
    //  TAREAS PARA PREGUNTAR AL USUARIO !!!!!
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(PreguntarCuestionarioInicial.class);
    tarea.ejecutar();
    
    //recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    //recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Hacer las preguntas al usuario para recomendar una pelicula"
  when
    obj:RecomendarPelicula(state==Objetivo.PENDING)
    objAntiguo:ReconocerUsuario(state==Objetivo.SOLVED)
    f:Focus(foco == objAntiguo)
  then
    obj.setSolving();
    update(obj);
    f.setFoco(obj);
    update(f);
    
    //  TAREAS PARA PREGUNTAR AL USUARIO QUE LE APETECE VER!!!!!
    
    //recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    //recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end



rule "El usuario acepta hacer el cuestionario"
  when
    obj:PreguntarDatosInicialesUsuario(state==Objetivo.SOLVING)
    f:Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionAfirmacion)
  then
  	TareaSincrona tarea = gestorTareas.crearTareaSincrona(CuestionarioInicialPreguntaSexo.class);
    tarea.ejecutar();
    retract(notif);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end

rule "El usuario NO acepta hacer el cuestionario"
  when
    obj:PreguntarDatosInicialesUsuario(state==Objetivo.SOLVING)
    f:Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionNegacion)
  then
  	
  	// Focalizar otro objetivo
  	
    retract(notif);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end



rule "Saludo Inicial al interlocutor y peticion de datos iniciales"
  when
	notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionSaludo)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(SaludarYPresentarFuncionalidad.class);
    tarea.ejecutar(identInterlc);
end
rule "Despedida"
  when
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionDespedida)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(Despedirse.class);
    tarea.ejecutar(identInterlc);
end
rule "No hay extraccion semantica del texto del interlocutor"
  when
    obj:ObtenerInfoInterlocutor(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.ExtraccionSemanticaNull)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(SolicitarInfoInicialPeli.class);
    tarea.ejecutar(identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end



rule "Hacer la pregunta 1 al usuario"
  when
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionNegacion)
  then

	TareaSincrona tarea = gestorTareas.crearTareaSincrona(SaludarYPresentarFuncionalidad.class);
    tarea.ejecutar(identInterlc);
   
end



rule "Preguntar si quiere valorar la ultima pelicula que ha visto"
  when
    //notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.ValorarUltimaPelicula)
    f:Focus()
  then
    
    //  TAREAS PARA PREGUNTAR SI QUIERE VALORAR LA ULTIMA PELICULA !!!!! HAY QUE CAMBIAR EL FOCOY CREAR EL OBJETIVO
    
end

