import icaro.infraestructura.recursosOrganizacion.recursoTrazas.ItfUsoRecursoTrazas;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.imp.componentes.InfoTraza;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.*;
import icaro.infraestructura.patronAgenteCognitivo.procesadorObjetivos.gestorTareas.ItfGestorTareas;
import icaro.infraestructura.entidadesBasicas.PerformativaUsuario;
import icaro.infraestructura.entidadesBasicas.comunicacion.*
import icaro.aplicaciones.agentes.AgenteAplicacionGuia.objetivos.*;
import icaro.aplicaciones.informacion.gestionCitas.*;
import icaro.aplicaciones.agentes.AgenteAplicacionGuia.tareas.*;

global ItfGestorTareas gestorTareas;
global ItfUsoRecursoTrazas recursoTrazas;
global String agentId;

rule "Creacion de los objectivos iniciales"
  when 
  then 
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(InicializarInfoWorkMem.class);
    tarea.ejecutar();
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
end
// =======================================================================
// REGLAS DE FOCALIZACION INICIALES (OBTENER NOMBRE DEL CHAT Y RECONOCER AL USUARIO)
rule "Regla de focalizacion en objetivo ReconocerUsuario"
  when
    f:Focus(foco == null )
    obj:ObtenerInfoInterlocutor()
  then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    update(f);
end
//=======================================================================
//Reglas de Consecucion del Objetivo ObtenerInfoInterlocutor
rule "Inicio del proceso de consecucion del  objetivo ObtenerInfoInterlocutor"
  when
    obj:ObtenerInfoInterlocutor(state==Objetivo.PENDING)
    Focus(foco ==obj)
  then
    obj.setSolving();
    update(obj);
end
rule "Saludo Inicial y peticion de info"
  when
    obj:ObtenerInfoInterlocutor(state==Objetivo.SOLVING)
    Focus(foco == obj)
  then
    //recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Se ejecuta la tarea : SolicitarDatosAcceso",InfoTraza.NivelTraza.debug));
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(SolicitarInfoInicial.class);
    tarea.ejecutar(VocabularioGestionCitas.IdentRecursoComunicacionChat);
    
    obj.setSolved();
    update(obj);
    
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end



// REGLAS PARA BUSCAR EL USUARIO EN LA BASE DE DATOS (RECURSO)
rule "Regla para focalizar el objetivo en reconocer usuario"
  when
    objAntiguo:ObtenerInfoInterlocutor(state==Objetivo.SOLVED)
    obj:ReconocerUsuario(state==Objetivo.PENDING)
    f:Focus(foco == objAntiguo)
  then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
    update(f);
end
rule "Inicio del proceso de consecucion del  objetivo ReconocerUsuario"
  when
    obj:ReconocerUsuario(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end
rule "Comprobar si existe el usuario"
  when
    obj:ReconocerUsuario(state==Objetivo.SOLVING)
    f:Focus(foco == obj)
  then
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Se ejecuta la tarea : comprobar usuario",InfoTraza.NivelTraza.debug));
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(BuscarUsuario.class);
    tarea.ejecutar();
    
    obj.setSolved();
    update(obj);
    
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end



// HACER PREGUNTAS INICIALES PARA CONOCER AL USUARIO Y TERMINACION DE LAS MISMAS
rule "Hacer las preguntas iniciales al usuario"
  when
    obj:PreguntarDatosInicialesUsuario(state==Objetivo.PENDING)
    f:Focus(foco != obj)
  then
    f.setFoco(obj);
    update(f);
    
    //  Tareas para preguntar al usuario
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(PreguntarCuestionarioInicial.class);
    tarea.ejecutar();
    
    //recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    //recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "El usuario acepta hacer el cuestionario"
  when
    obj:PreguntarDatosInicialesUsuario(state==Objetivo.PENDING)
    f:Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionAfirmacion)
  then
    obj.setSolving();
    update(obj);
    
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(LanzarObjetivoPreguntaSexo.class);
    tarea.ejecutar();
    
    retract(notif);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end
rule "El usuario NO acepta hacer el cuestionario"
  when
    obj:PreguntarDatosInicialesUsuario(state==Objetivo.PENDING)
    f:Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionNegacion)
  then
    obj.setFailed();
    update(obj);
    
    retract(notif);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end
rule "El usuario ha terminado el cuestionario o no lo quiere hacer"
  when
    obj:PreguntarDatosInicialesUsuario(state==Objetivo.SOLVED || state==Objetivo.FAILED)
  then
    
    // Focalizar la tarea de recomendar una peli
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(FocalizarObjetivoRecomendarPeli.class);
    tarea.ejecutar();
    
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end


// REGLAS DE BIENVENIDA, DESPEDIDA Y NO ENTIENDO
rule "Saludo Inicial al interlocutor y peticion de datos iniciales"
  when
	notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionSaludo)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(SaludarYPresentarFuncionalidad.class);
    tarea.ejecutar(identInterlc);
end
rule "Despedida"
  when
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionDespedida)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(Despedirse.class);
    tarea.ejecutar(identInterlc);
end
rule "No hay extraccion semantica del texto del interlocutor"
  when
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.ExtraccionSemanticaNull)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(SolicitarInfoInicialPeli.class);
    tarea.ejecutar(identInterlc);
    //recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    //recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end


// PREGUNTAS CONCRETAS DEL CUESTIONARIO
rule "Preguntar sexo usuario"
  when
    obj:PreguntarSexo(state==Objetivo.PENDING)
    f:Focus(foco != obj)
  then
  	TareaSincrona tarea = gestorTareas.crearTareaSincrona(CuestionarioInicialPreguntaSexo.class);
    tarea.ejecutar();
    
    obj.setSolving();
    update(obj);
    f.setFoco(obj);
    update(f);
    
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end
rule "Recibir respuesta sexo usuario"
  when
    obj:PreguntarSexo(state==Objetivo.SOLVING)
    f:Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionSexoHombre || tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionSexoMujer)
  then
  	TareaSincrona tarea = gestorTareas.crearTareaSincrona(GuardarEdad.class);
    tarea.ejecutar(notif);
  
  	TareaSincrona tarea1 = gestorTareas.crearTareaSincrona(LanzarObjetivoPreguntaEdad.class);
    tarea1.ejecutar();
    
    obj.setSolved();
    update(obj);
    f.setFoco(obj);
    update(f);
    
    retract(notif);
    
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end
rule "Preguntar edad usuario"
  when
    obj:PreguntarEdad(state==Objetivo.PENDING)
    f:Focus(foco != obj)
  then
  	TareaSincrona tarea = gestorTareas.crearTareaSincrona(CuestionarioInicialPreguntaEdad.class);
    tarea.ejecutar();
    
    obj.setSolving();
    update(obj);
    f.setFoco(obj);
    update(f);
    
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end
rule "Recibir respuesta edad usuario"
  when
    obj:PreguntarEdad(state==Objetivo.SOLVING)
    f:Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionNumero)
    objPrincipal:PreguntarDatosInicialesUsuario(state==Objetivo.SOLVING)
  then
  	TareaSincrona tarea = gestorTareas.crearTareaSincrona(GuardarEdad.class);
    tarea.ejecutar(notif);
    
    obj.setSolved();
    update(obj);
    f.setFoco(obj);
    update(f);
    
    retract(notif);
    
    objPrincipal.setSolved();
    update(objPrincipal);
    
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA : " + drools.getRule().getName());
end





// REGLAS PARA RECOMENDAR PELI
rule "Mirar si puedes deducir un genero, o preguntale"
  when
    obj:RecomendarPelicula(state==Objetivo.PENDING)
    f:Focus()
  then
    obj.setSolving();
    update(obj);
    f.setFoco(obj);
    update(f);
    
    //  Tareas para preguntar al usuario que le apetece ver
    
    
    //recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    //recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end




// REGLAS PARA VALORAR PELI
rule "Preguntar si quiere valorar la ultima pelicula que ha visto"
  when
    //notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.ValorarUltimaPelicula)
    f:Focus()
  then
    
    // TODO TAREA QUE LE PREGUNTA SI LE HA GUSTADO Y QUE SI LE APETECE LE PONGA NOTA
    
end





// TODO RESPONDER AMIGABLEMENTE CONFORME A LA NOTA QUE LE PUSO





// TODO PONER UNAS REGLAS CON SUJERIRPELI A SOLVED Y LAS ANOTACIONES SI, NO, YA LA HE VISTO (Y OTRAS COSAS QUE PUEDA DECIR EL USUARIO)





// TODO ANOTACION "YA LA HE VISTO" QUE LANZA UNA REGLA QUE RECUPERA LA ULTIMA PELI SUJERIDA Y LE PIDE QUE SI QUIERE VALORARLA. A CONTINUACI�N PROPONER OTRA.





// TODO ANOTACION CON ACTOR, DECIR ALGUNA PELI DE ESE ACTOR (DE ESE ACTOR CONOZCO ESTA PELI, PODR�A GUSTARTE...)





// TODO RECONOCER UN ERROR DEL USUARIO, POR AHORA TAREA IMPOSIBLE, DEJAR PARA OTRO MOMENTO. POSIBLE SOLUCI�N ES PASARLE LA FRASE A GOOGLE Y QUE TE LA CORRIJA, UNA VEZ HECHO ESO SE LA PASAS AL EXTRACTOR SEM�NTICO.




