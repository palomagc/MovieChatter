import icaro.infraestructura.recursosOrganizacion.recursoTrazas.ItfUsoRecursoTrazas;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.imp.componentes.InfoTraza;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.*;
import icaro.infraestructura.patronAgenteCognitivo.procesadorObjetivos.gestorTareas.ItfGestorTareas;
import icaro.infraestructura.entidadesBasicas.PerformativaUsuario;
import icaro.infraestructura.entidadesBasicas.comunicacion.*;
import icaro.aplicaciones.agentes.AgenteAplicacionTMDB.objetivos.*;
import icaro.aplicaciones.informacion.gestionCitas.*;
import icaro.aplicaciones.agentes.AgenteAplicacionTMDB.tareas.*;

global ItfGestorTareas gestorTareas;
global ItfUsoRecursoTrazas recursoTrazas;
global String agentId;

rule "Creacion de los objectivos iniciales"
  when 
  then 
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(InicializarInfoWorkMem.class);
    tarea.ejecutar();
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
end
// =======================================================================
//Reglas de focalizacion.
rule "Regla de focalizacion en objetivo RecomendarPelicula"
  when
    f:Focus(foco == null )
    obj:RecomendarPelicula()
  then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    update(f);
end
//=======================================================================
///Reglas de Consecucion del Objetivo RecomendarPelicula
rule "Inicio del proceso de consecucion del objetivo RecomendarPelicula"
  when
    obj:RecomendarPelicula(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
end
rule "Listar los generos de peliculas"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
   	notif:Notificacion(identInterlc:identNotificador, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGenero)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(ListarGeneros.class);
    tarea.ejecutar(identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero accion"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroAccion)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero aventura"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroAventura)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero animacion"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroAnimacion)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero comedia"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroComedia)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero crimen"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroCrimen)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero documental"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroDocumental)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero drama"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroDrama)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero familiar"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroFamiliar)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero fantasia"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroFantasia)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero extranjero"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroExtranjero)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero historico"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroHistorico)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero terror"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroTerror)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero musical"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroMusical)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero misterio"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroMisterio)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero romantico"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroRomantico)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero ciencia ficcion"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroCienciaFiccion)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero tv"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroTV)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero suspense"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroSuspense)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero guerra"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroGuerra)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar genero oeste"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(identInterlc:identNotificador, genero:tipoNotificacion, tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroOeste)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(genero, identInterlc);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

