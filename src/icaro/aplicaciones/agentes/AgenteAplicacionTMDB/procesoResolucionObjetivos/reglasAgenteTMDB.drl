import icaro.infraestructura.recursosOrganizacion.recursoTrazas.ItfUsoRecursoTrazas;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.imp.componentes.InfoTraza;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.*;
import icaro.infraestructura.patronAgenteCognitivo.procesadorObjetivos.gestorTareas.ItfGestorTareas;
import icaro.infraestructura.entidadesBasicas.PerformativaUsuario;
import icaro.infraestructura.entidadesBasicas.comunicacion.*;
import icaro.aplicaciones.agentes.AgenteAplicacionTMDB.objetivos.*;
import icaro.aplicaciones.informacion.gestionCitas.*;
import icaro.aplicaciones.agentes.AgenteAplicacionTMDB.tareas.*;

global ItfGestorTareas gestorTareas;
global ItfUsoRecursoTrazas recursoTrazas;
global String agentId;

rule "Creacion de los objectivos iniciales"
  when 
  then 
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(InicializarInfoWorkMem.class);
    tarea.ejecutar();
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName()); 
end
// =======================================================================
//Reglas de focalizacion.
rule "Regla de focalizacion en objetivo RecomendarPelicula"
  when
    f:Focus(foco == null )
    obj:RecomendarPelicula()
  then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    update(f);
end
//=======================================================================
///Reglas de Consecucion del Objetivo RecomendarPelicula
rule "Inicio del proceso de consecucion del objetivo RecomendarPelicula"
  when
    obj:RecomendarPelicula(state==Objetivo.PENDING)
    Focus(foco == obj)
  then
    obj.setSolving();
    update(obj);
end
rule "Listar los generos de peliculas"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
   	notif:Notificacion(tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneros)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(ListarGeneros.class);
    tarea.ejecutar();
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar por genero"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(tipoNotifica:tipoNotificacion,
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroAccion ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroAventura ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroAnimacion ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroComedia ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroCrimen ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroDocumental ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroDrama ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroFamiliar ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroFantasia ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroExtranjero ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroHistorico ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroTerror ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroMusical ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroMisterio ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroRomantico ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroCienciaFiccion ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroTV ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroSuspense ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroGuerra ||
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionGeneroOeste)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaGenero.class);
    tarea.ejecutar(tipoNotifica);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar por ano"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(tipoNotifica:tipoNotificacion, mensaje:mensajeNotificacion,
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionAnos)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaAno.class);
    tarea.ejecutar(tipoNotifica, mensaje);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar por actor"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(tipoNotifica:tipoNotificacion, mensaje:mensajeNotificacion,
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionActor)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaPerson.class);
    tarea.ejecutar(tipoNotifica, mensaje);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
rule "Recomendar por varios campos"
  when
    obj:RecomendarPelicula(state==Objetivo.SOLVING)
    Focus(foco == obj)
    notif:Notificacion(tipoNotifica:tipoNotificacion, mensaje:mensajeNotificacion,
        tipoNotificacion==VocabularioGestionCitas.NombreTipoNotificacionBusquedaVariosCampos)
  then
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(RecomendarPeliculaVarios.class);
    tarea.ejecutar(tipoNotifica, mensaje);
    recursoTrazas.aceptaNuevaTraza(new InfoTraza(agentId,"Realizando el objetivo : "+obj.getgoalId()+"  Ejecutando la tarea : "+ tarea.getIdentTarea() ,InfoTraza.NivelTraza.debug));
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end
